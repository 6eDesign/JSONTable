{"name":"JSONTable","tagline":"Quickly & Easily create responsive and customize-able views for virtually any JSON data-set.  ","body":"# JSONTable\r\nQuickly & Easily render responsive and customize-able views for virtually any JSON data-set.  \r\n![alt tag](https://raw.github.com/6eDesign/JSONTable/master/lib/img/example.png)\r\nNow accompanied by the power of a customized FooTable build for sorting, filtering, column-picking, and pagination capabilities.  \r\n\r\n### Usage (Simple Case)\r\n##### HTML:\r\n````html\r\n<div id=\"table\"></div>\r\n\r\n```` \r\n##### Javascript: \r\n````js\r\n// create JSONTable from 'myJSON' and append it to the element with ID: 'myTargetId':\r\nJSONTable('myTargetID', myJSON) \r\n````\r\n\r\n### Options\r\nKey | Type | Description | Example\r\n--- | --- | --- | ---\r\n'show' | String (or) [] | Specify how many (String) or which (Array) JSON keys should be included in the default column layout. | 'first_6' OR [ 'key1', 'key2', 'key3' ]\r\n'trim' | [] | Provide an array of JSON keys which you would like excluded from the view. | [ 'key1', 'key2', 'key3' ]\r\n'keyMap' | {} | Provide more friendly names/translations for JSON keys. | { 'origKeyName': 'My Fancy New Key Name' } \r\n'filterMap' | {} | Specify functions to filter specific JSON values before displaying them in the table. | { 'keyIWantToFilter': 'myFilterFunctionsName' } \r\n'paginationId' | String | Provide an element ID for the pagination links if you would like to enable pagination | default: Disabled\r\n'perPage' | Int | How many results should be on each 'page'? | default: 10\r\n'searchId' | String | Allow searching of the JSON data by providing the ID for your search text box input. | 'myInputID'\r\n'breakpoints' | {} | Provide custom breakpoints for the FooTable. | default: { phone: 480, tablet: 1024, desktop: 10000 }\r\n'makeFootable' | Boolean | Disable the creation of the FooTable object for a plain HTML table by setting this to false. | default: true\r\n\r\n### Usage (Advanced Case)\r\n\r\n#### HTML: \r\n````html \r\n\r\nFilter: <input id=\"myFilter\" type=\"text\" /> \r\n\r\n<div id=\"table\"></div>\r\n\r\n<ul id=\"pagination1\" class=\"footable-nav\">\r\n\t<span>Pages:</span>\r\n</ul>\r\n\r\n````\r\n\r\n#### Javascript: \r\n````js\r\nvar yell = function(data) { \r\n\treturn data + \"!\"; \r\n}\r\n\r\n$(document).ready(function($){\r\n\tJSONTable(\"table\", JSON, { \r\n\t\t/*\r\n\t\t\tshow also accepts a string in the form of: \r\n\t\t\t\tshow: \"first_@\" // where @ is an integer representing the number of cols to show\r\n\t\t*/ \r\n\t\t// show: 'first_5'\r\n\t\tshow: ['a','c','e'] \r\n\t\t/*\r\n\t\t\tkeyMap instructs JSONTable to rename JSON Keys\r\n\t\t*/\r\n\t\t, keyMap: { \r\n\t\t\t'a': 'Alphabet Soup'\r\n\t\t}\r\n\t\t/*\r\n\t\t\tfilterMap instructs JSONTable to run content through your own custom filter functions.  \r\n\t\t\tsetup your filter functions like so: \r\n\r\n\t\t\tvar myFilter = function(data) { \r\n\t\t\t\t// manipulate your data here and then: \r\n\t\t\t\treturn data; // so we can render it into the JSONTable\r\n\t\t\t}\r\n\t\t*/\r\n\t\t, filterMap: { \r\n\t\t\t'a': 'yell'\r\n\t\t}\r\n\t\t// provide the ID of the text box used for searching/filtering JSON data: \r\n\t\t, searchId: 'myFilter'\r\n\t\t// provide the ID of the element where you would like to store your pagination links: \r\n\t\t, paginationId:  'pagination1'\r\n\t\t// let JSON table know how many items you would like per page: \r\n\t\t, perPage: 10\r\n\t}); \r\n}); \r\n````\r\n\r\n### License\r\n````js\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 Jonathan Greenemeier\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n````","google":"UA-43250200-1","note":"Don't delete this file! It's used internally to help with page regeneration."}